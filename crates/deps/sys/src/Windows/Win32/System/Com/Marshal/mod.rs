#![allow(non_snake_case, non_camel_case_types, non_upper_case_globals, clashing_extern_declarations, clippy::all)]
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Foundation::BSTR);
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Foundation::BSTR);
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Foundation::BSTR) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Foundation::BSTR) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Foundation::BSTR) -> u32;
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Foundation::BSTR) -> u32;
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Foundation::BSTR) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type BSTR_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Foundation::BSTR) -> *mut u8;
pub type CLIPFORMAT_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const u16);
pub type CLIPFORMAT_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const u16);
pub type CLIPFORMAT_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const u16) -> *mut u8;
pub type CLIPFORMAT_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const u16) -> *mut u8;
pub type CLIPFORMAT_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const u16) -> u32;
pub type CLIPFORMAT_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const u16) -> u32;
pub type CLIPFORMAT_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut u16) -> *mut u8;
pub type CLIPFORMAT_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut u16) -> *mut u8;
pub type CoGetMarshalSizeMax = unsafe extern "system" fn(pulsize: *mut u32, riid: *const ::windows_sys::core::GUID, punk: ::windows_sys::core::IUnknown, dwdestcontext: u32, pvdestcontext: *const ::core::ffi::c_void, mshlflags: u32) -> ::windows_sys::core::HRESULT;
pub type CoGetStandardMarshal = unsafe extern "system" fn(riid: *const ::windows_sys::core::GUID, punk: ::windows_sys::core::IUnknown, dwdestcontext: u32, pvdestcontext: *const ::core::ffi::c_void, mshlflags: u32, ppmarshal: *mut IMarshal) -> ::windows_sys::core::HRESULT;
pub type CoGetStdMarshalEx = unsafe extern "system" fn(punkouter: ::windows_sys::core::IUnknown, smexflags: u32, ppunkinner: *mut ::windows_sys::core::IUnknown) -> ::windows_sys::core::HRESULT;
pub type CoMarshalHresult = unsafe extern "system" fn(pstm: super::IStream, hresult: ::windows_sys::core::HRESULT) -> ::windows_sys::core::HRESULT;
pub type CoMarshalInterThreadInterfaceInStream = unsafe extern "system" fn(riid: *const ::windows_sys::core::GUID, punk: ::windows_sys::core::IUnknown, ppstm: *mut super::IStream) -> ::windows_sys::core::HRESULT;
pub type CoMarshalInterface = unsafe extern "system" fn(pstm: super::IStream, riid: *const ::windows_sys::core::GUID, punk: ::windows_sys::core::IUnknown, dwdestcontext: u32, pvdestcontext: *const ::core::ffi::c_void, mshlflags: u32) -> ::windows_sys::core::HRESULT;
pub type CoReleaseMarshalData = unsafe extern "system" fn(pstm: super::IStream) -> ::windows_sys::core::HRESULT;
pub type CoUnmarshalHresult = unsafe extern "system" fn(pstm: super::IStream, phresult: *mut ::windows_sys::core::HRESULT) -> ::windows_sys::core::HRESULT;
pub type CoUnmarshalInterface = unsafe extern "system" fn(pstm: super::IStream, riid: *const ::windows_sys::core::GUID, ppv: *mut *mut ::core::ffi::c_void) -> ::windows_sys::core::HRESULT;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HACCEL);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HACCEL);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HACCEL) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HACCEL) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HACCEL) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HACCEL) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HACCEL) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HACCEL_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HACCEL) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HBITMAP);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HBITMAP);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HBITMAP) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HBITMAP) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HBITMAP) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HBITMAP) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HBITMAP) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HBITMAP_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HBITMAP) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HDC);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HDC);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HDC) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HDC) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HDC) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HDC) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HDC) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HDC_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HDC) -> *mut u8;
pub type HGLOBAL_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const isize);
pub type HGLOBAL_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const isize);
pub type HGLOBAL_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const isize) -> *mut u8;
pub type HGLOBAL_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const isize) -> *mut u8;
pub type HGLOBAL_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const isize) -> u32;
pub type HGLOBAL_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const isize) -> u32;
pub type HGLOBAL_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut isize) -> *mut u8;
pub type HGLOBAL_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut isize) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HICON);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HICON);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HICON) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HICON) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HICON) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HICON) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HICON) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HICON_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HICON) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HMENU);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::UI::WindowsAndMessaging::HMENU);
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HMENU) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::UI::WindowsAndMessaging::HMENU) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HMENU) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::UI::WindowsAndMessaging::HMENU) -> u32;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HMENU) -> *mut u8;
#[cfg(feature = "Win32_UI_WindowsAndMessaging")]
pub type HMENU_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::UI::WindowsAndMessaging::HMENU) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HPALETTE);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Graphics::Gdi::HPALETTE);
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HPALETTE) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Graphics::Gdi::HPALETTE) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HPALETTE) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Graphics::Gdi::HPALETTE) -> u32;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HPALETTE) -> *mut u8;
#[cfg(feature = "Win32_Graphics_Gdi")]
pub type HPALETTE_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Graphics::Gdi::HPALETTE) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Foundation::HWND);
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::super::super::Foundation::HWND);
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Foundation::HWND) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::super::super::Foundation::HWND) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Foundation::HWND) -> u32;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::super::super::Foundation::HWND) -> u32;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Foundation::HWND) -> *mut u8;
#[cfg(feature = "Win32_Foundation")]
pub type HWND_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::super::super::Foundation::HWND) -> *mut u8;
pub type LPSAFEARRAY_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const *const super::SAFEARRAY);
pub type LPSAFEARRAY_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const *const super::SAFEARRAY);
pub type LPSAFEARRAY_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const *const super::SAFEARRAY) -> *mut u8;
pub type LPSAFEARRAY_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const *const super::SAFEARRAY) -> *mut u8;
pub type LPSAFEARRAY_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const *const super::SAFEARRAY) -> u32;
pub type LPSAFEARRAY_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const *const super::SAFEARRAY) -> u32;
pub type LPSAFEARRAY_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut *mut super::SAFEARRAY) -> *mut u8;
pub type LPSAFEARRAY_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut *mut super::SAFEARRAY) -> *mut u8;
pub type SNB_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const *const *const u16);
pub type SNB_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const *const *const u16);
pub type SNB_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const *const *const u16) -> *mut u8;
pub type SNB_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const *const *const u16) -> *mut u8;
pub type SNB_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const *const *const u16) -> u32;
pub type SNB_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const *const *const u16) -> u32;
pub type SNB_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut *mut *mut u16) -> *mut u8;
pub type SNB_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut *mut *mut u16) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::STGMEDIUM);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::STGMEDIUM);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::STGMEDIUM) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::STGMEDIUM) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::STGMEDIUM) -> u32;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::STGMEDIUM) -> u32;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::STGMEDIUM) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_Graphics_Gdi", feature = "Win32_System_Com_StructuredStorage"))]
pub type STGMEDIUM_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::STGMEDIUM) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserFree = unsafe extern "system" fn(param0: *const u32, param1: *const super::VARIANT);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserFree64 = unsafe extern "system" fn(param0: *const u32, param1: *const super::VARIANT);
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserMarshal = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::VARIANT) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserMarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *mut u8, param2: *const super::VARIANT) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserSize = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::VARIANT) -> u32;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserSize64 = unsafe extern "system" fn(param0: *const u32, param1: u32, param2: *const super::VARIANT) -> u32;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserUnmarshal = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::VARIANT) -> *mut u8;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Ole"))]
pub type VARIANT_UserUnmarshal64 = unsafe extern "system" fn(param0: *const u32, param1: *const u8, param2: *mut super::VARIANT) -> *mut u8;
pub type IMarshal = *mut ::core::ffi::c_void;
pub type IMarshal2 = *mut ::core::ffi::c_void;
pub type IMarshalingStream = *mut ::core::ffi::c_void;
pub type STDMSHLFLAGS = i32;
pub const SMEXF_SERVER: STDMSHLFLAGS = 1i32;
pub const SMEXF_HANDLER: STDMSHLFLAGS = 2i32;
