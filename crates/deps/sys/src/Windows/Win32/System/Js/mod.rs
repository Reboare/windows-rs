#![allow(non_snake_case, non_camel_case_types, non_upper_case_globals, clashing_extern_declarations, clippy::all)]
pub type JsAddRef = unsafe extern "system" fn(r#ref: *const ::core::ffi::c_void, count: *mut u32) -> JsErrorCode;
pub type JsBoolToBoolean = unsafe extern "system" fn(value: u8, booleanvalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsBooleanToBool = unsafe extern "system" fn(value: *const ::core::ffi::c_void, boolvalue: *mut bool) -> JsErrorCode;
pub type JsCallFunction = unsafe extern "system" fn(function: *const ::core::ffi::c_void, arguments: *const *const ::core::ffi::c_void, argumentcount: u16, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCollectGarbage = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsConstructObject = unsafe extern "system" fn(function: *const ::core::ffi::c_void, arguments: *const *const ::core::ffi::c_void, argumentcount: u16, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsConvertValueToBoolean = unsafe extern "system" fn(value: *const ::core::ffi::c_void, booleanvalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsConvertValueToNumber = unsafe extern "system" fn(value: *const ::core::ffi::c_void, numbervalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsConvertValueToObject = unsafe extern "system" fn(value: *const ::core::ffi::c_void, object: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsConvertValueToString = unsafe extern "system" fn(value: *const ::core::ffi::c_void, stringvalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateArray = unsafe extern "system" fn(length: u32, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(any(target_arch = "x86_64", target_arch = "aarch64",))]
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsCreateContext = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, debugapplication: super::Diagnostics::Debug::IDebugApplication64, newcontext: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(any(target_arch = "x86",))]
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsCreateContext = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, debugapplication: super::Diagnostics::Debug::IDebugApplication32, newcontext: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateExternalObject = unsafe extern "system" fn(data: *const ::core::ffi::c_void, finalizecallback: JsFinalizeCallback, object: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateFunction = unsafe extern "system" fn(nativefunction: JsNativeFunction, callbackstate: *const ::core::ffi::c_void, function: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateObject = unsafe extern "system" fn(object: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateRangeError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateReferenceError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateRuntime = unsafe extern "system" fn(attributes: JsRuntimeAttributes, runtimeversion: JsRuntimeVersion, threadservice: JsThreadServiceCallback, runtime: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateSyntaxError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateTypeError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsCreateURIError = unsafe extern "system" fn(message: *const ::core::ffi::c_void, error: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsDefineProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, propertydescriptor: *const ::core::ffi::c_void, result: *mut bool) -> JsErrorCode;
pub type JsDeleteIndexedProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, index: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsDeleteProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, usestrictrules: u8, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsDisableRuntimeExecution = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsDisposeRuntime = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsDoubleToNumber = unsafe extern "system" fn(doublevalue: f64, value: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsEnableRuntimeExecution = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsEnumerateHeap = unsafe extern "system" fn(enumerator: *mut super::Diagnostics::Debug::IActiveScriptProfilerHeapEnum) -> JsErrorCode;
pub type JsEquals = unsafe extern "system" fn(object1: *const ::core::ffi::c_void, object2: *const ::core::ffi::c_void, result: *mut bool) -> JsErrorCode;
pub type JsGetAndClearException = unsafe extern "system" fn(exception: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetCurrentContext = unsafe extern "system" fn(currentcontext: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetExtensionAllowed = unsafe extern "system" fn(object: *const ::core::ffi::c_void, value: *mut bool) -> JsErrorCode;
pub type JsGetExternalData = unsafe extern "system" fn(object: *const ::core::ffi::c_void, externaldata: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetFalseValue = unsafe extern "system" fn(falsevalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetGlobalObject = unsafe extern "system" fn(globalobject: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetIndexedProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, index: *const ::core::ffi::c_void, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetNullValue = unsafe extern "system" fn(nullvalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetOwnPropertyDescriptor = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, propertydescriptor: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetOwnPropertyNames = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertynames: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, value: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsGetPropertyIdFromName = unsafe extern "system" fn(name: super::super::Foundation::PWSTR, propertyid: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetPropertyNameFromId = unsafe extern "system" fn(propertyid: *const ::core::ffi::c_void, name: *mut *mut u16) -> JsErrorCode;
pub type JsGetPrototype = unsafe extern "system" fn(object: *const ::core::ffi::c_void, prototypeobject: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetRuntime = unsafe extern "system" fn(context: *const ::core::ffi::c_void, runtime: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetRuntimeMemoryLimit = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, memorylimit: *mut usize) -> JsErrorCode;
pub type JsGetRuntimeMemoryUsage = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, memoryusage: *mut usize) -> JsErrorCode;
pub type JsGetStringLength = unsafe extern "system" fn(stringvalue: *const ::core::ffi::c_void, length: *mut i32) -> JsErrorCode;
pub type JsGetTrueValue = unsafe extern "system" fn(truevalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetUndefinedValue = unsafe extern "system" fn(undefinedvalue: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsGetValueType = unsafe extern "system" fn(value: *const ::core::ffi::c_void, r#type: *mut JsValueType) -> JsErrorCode;
pub type JsHasException = unsafe extern "system" fn(hasexception: *mut bool) -> JsErrorCode;
pub type JsHasExternalData = unsafe extern "system" fn(object: *const ::core::ffi::c_void, value: *mut bool) -> JsErrorCode;
pub type JsHasIndexedProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, index: *const ::core::ffi::c_void, result: *mut bool) -> JsErrorCode;
pub type JsHasProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, hasproperty: *mut bool) -> JsErrorCode;
pub type JsIdle = unsafe extern "system" fn(nextidletick: *mut u32) -> JsErrorCode;
pub type JsIntToNumber = unsafe extern "system" fn(intvalue: i32, value: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsIsEnumeratingHeap = unsafe extern "system" fn(isenumeratingheap: *mut bool) -> JsErrorCode;
pub type JsIsRuntimeExecutionDisabled = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, isdisabled: *mut bool) -> JsErrorCode;
pub type JsNumberToDouble = unsafe extern "system" fn(value: *const ::core::ffi::c_void, doublevalue: *mut f64) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsParseScript = unsafe extern "system" fn(script: super::super::Foundation::PWSTR, sourcecontext: usize, sourceurl: super::super::Foundation::PWSTR, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsParseSerializedScript = unsafe extern "system" fn(script: super::super::Foundation::PWSTR, buffer: *const u8, sourcecontext: usize, sourceurl: super::super::Foundation::PWSTR, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsPointerToString = unsafe extern "system" fn(stringvalue: super::super::Foundation::PWSTR, stringlength: usize, value: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub type JsPreventExtension = unsafe extern "system" fn(object: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsRelease = unsafe extern "system" fn(r#ref: *const ::core::ffi::c_void, count: *mut u32) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsRunScript = unsafe extern "system" fn(script: super::super::Foundation::PWSTR, sourcecontext: usize, sourceurl: super::super::Foundation::PWSTR, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsRunSerializedScript = unsafe extern "system" fn(script: super::super::Foundation::PWSTR, buffer: *const u8, sourcecontext: usize, sourceurl: super::super::Foundation::PWSTR, result: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
#[cfg(feature = "Win32_Foundation")]
pub type JsSerializeScript = unsafe extern "system" fn(script: super::super::Foundation::PWSTR, buffer: *mut u8, buffersize: *mut u32) -> JsErrorCode;
pub type JsSetCurrentContext = unsafe extern "system" fn(context: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsSetException = unsafe extern "system" fn(exception: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsSetExternalData = unsafe extern "system" fn(object: *const ::core::ffi::c_void, externaldata: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsSetIndexedProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, index: *const ::core::ffi::c_void, value: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsSetProperty = unsafe extern "system" fn(object: *const ::core::ffi::c_void, propertyid: *const ::core::ffi::c_void, value: *const ::core::ffi::c_void, usestrictrules: u8) -> JsErrorCode;
pub type JsSetPrototype = unsafe extern "system" fn(object: *const ::core::ffi::c_void, prototypeobject: *const ::core::ffi::c_void) -> JsErrorCode;
pub type JsSetRuntimeBeforeCollectCallback = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, callbackstate: *const ::core::ffi::c_void, beforecollectcallback: JsBeforeCollectCallback) -> JsErrorCode;
pub type JsSetRuntimeMemoryAllocationCallback = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, callbackstate: *const ::core::ffi::c_void, allocationcallback: JsMemoryAllocationCallback) -> JsErrorCode;
pub type JsSetRuntimeMemoryLimit = unsafe extern "system" fn(runtime: *const ::core::ffi::c_void, memorylimit: usize) -> JsErrorCode;
#[cfg(any(target_arch = "x86_64", target_arch = "aarch64",))]
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsStartDebugging = unsafe extern "system" fn(debugapplication: super::Diagnostics::Debug::IDebugApplication64) -> JsErrorCode;
#[cfg(any(target_arch = "x86",))]
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsStartDebugging = unsafe extern "system" fn(debugapplication: super::Diagnostics::Debug::IDebugApplication32) -> JsErrorCode;
#[cfg(feature = "Win32_System_Diagnostics_Debug")]
pub type JsStartProfiling = unsafe extern "system" fn(callback: super::Diagnostics::Debug::IActiveScriptProfilerCallback, eventmask: super::Diagnostics::Debug::PROFILER_EVENT_MASK, context: u32) -> JsErrorCode;
pub type JsStopProfiling = unsafe extern "system" fn(reason: ::windows_sys::core::HRESULT) -> JsErrorCode;
pub type JsStrictEquals = unsafe extern "system" fn(object1: *const ::core::ffi::c_void, object2: *const ::core::ffi::c_void, result: *mut bool) -> JsErrorCode;
pub type JsStringToPointer = unsafe extern "system" fn(value: *const ::core::ffi::c_void, stringvalue: *mut *mut u16, stringlength: *mut usize) -> JsErrorCode;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Com", feature = "Win32_System_Ole"))]
pub type JsValueToVariant = unsafe extern "system" fn(object: *const ::core::ffi::c_void, variant: *mut super::Com::VARIANT) -> JsErrorCode;
#[cfg(all(feature = "Win32_Foundation", feature = "Win32_System_Com", feature = "Win32_System_Ole"))]
pub type JsVariantToValue = unsafe extern "system" fn(variant: *const super::Com::VARIANT, value: *mut *mut ::core::ffi::c_void) -> JsErrorCode;
pub const JS_SOURCE_CONTEXT_NONE: u64 = 18446744073709551615u64;
pub type JsBackgroundWorkItemCallback = ::core::option::Option<unsafe extern "system" fn(callbackstate: *const ::core::ffi::c_void)>;
pub type JsBeforeCollectCallback = ::core::option::Option<unsafe extern "system" fn(callbackstate: *const ::core::ffi::c_void)>;
pub type JsErrorCode = u32;
pub const JsNoError: JsErrorCode = 0u32;
pub const JsErrorCategoryUsage: JsErrorCode = 65536u32;
pub const JsErrorInvalidArgument: JsErrorCode = 65537u32;
pub const JsErrorNullArgument: JsErrorCode = 65538u32;
pub const JsErrorNoCurrentContext: JsErrorCode = 65539u32;
pub const JsErrorInExceptionState: JsErrorCode = 65540u32;
pub const JsErrorNotImplemented: JsErrorCode = 65541u32;
pub const JsErrorWrongThread: JsErrorCode = 65542u32;
pub const JsErrorRuntimeInUse: JsErrorCode = 65543u32;
pub const JsErrorBadSerializedScript: JsErrorCode = 65544u32;
pub const JsErrorInDisabledState: JsErrorCode = 65545u32;
pub const JsErrorCannotDisableExecution: JsErrorCode = 65546u32;
pub const JsErrorHeapEnumInProgress: JsErrorCode = 65547u32;
pub const JsErrorArgumentNotObject: JsErrorCode = 65548u32;
pub const JsErrorInProfileCallback: JsErrorCode = 65549u32;
pub const JsErrorInThreadServiceCallback: JsErrorCode = 65550u32;
pub const JsErrorCannotSerializeDebugScript: JsErrorCode = 65551u32;
pub const JsErrorAlreadyDebuggingContext: JsErrorCode = 65552u32;
pub const JsErrorAlreadyProfilingContext: JsErrorCode = 65553u32;
pub const JsErrorIdleNotEnabled: JsErrorCode = 65554u32;
pub const JsErrorCategoryEngine: JsErrorCode = 131072u32;
pub const JsErrorOutOfMemory: JsErrorCode = 131073u32;
pub const JsErrorCategoryScript: JsErrorCode = 196608u32;
pub const JsErrorScriptException: JsErrorCode = 196609u32;
pub const JsErrorScriptCompile: JsErrorCode = 196610u32;
pub const JsErrorScriptTerminated: JsErrorCode = 196611u32;
pub const JsErrorScriptEvalDisabled: JsErrorCode = 196612u32;
pub const JsErrorCategoryFatal: JsErrorCode = 262144u32;
pub const JsErrorFatal: JsErrorCode = 262145u32;
pub type JsFinalizeCallback = ::core::option::Option<unsafe extern "system" fn(data: *const ::core::ffi::c_void)>;
pub type JsMemoryAllocationCallback = ::core::option::Option<unsafe extern "system" fn(callbackstate: *const ::core::ffi::c_void, allocationevent: JsMemoryEventType, allocationsize: usize) -> bool>;
pub type JsMemoryEventType = i32;
pub const JsMemoryAllocate: JsMemoryEventType = 0i32;
pub const JsMemoryFree: JsMemoryEventType = 1i32;
pub const JsMemoryFailure: JsMemoryEventType = 2i32;
pub type JsNativeFunction = ::core::option::Option<unsafe extern "system" fn(callee: *const ::core::ffi::c_void, isconstructcall: bool, arguments: *const *const ::core::ffi::c_void, argumentcount: u16, callbackstate: *const ::core::ffi::c_void) -> *mut ::core::ffi::c_void>;
pub type JsRuntimeAttributes = i32;
pub const JsRuntimeAttributeNone: JsRuntimeAttributes = 0i32;
pub const JsRuntimeAttributeDisableBackgroundWork: JsRuntimeAttributes = 1i32;
pub const JsRuntimeAttributeAllowScriptInterrupt: JsRuntimeAttributes = 2i32;
pub const JsRuntimeAttributeEnableIdleProcessing: JsRuntimeAttributes = 4i32;
pub const JsRuntimeAttributeDisableNativeCodeGeneration: JsRuntimeAttributes = 8i32;
pub const JsRuntimeAttributeDisableEval: JsRuntimeAttributes = 16i32;
pub type JsRuntimeVersion = i32;
pub const JsRuntimeVersion10: JsRuntimeVersion = 0i32;
pub const JsRuntimeVersion11: JsRuntimeVersion = 1i32;
pub const JsRuntimeVersionEdge: JsRuntimeVersion = -1i32;
pub type JsThreadServiceCallback = ::core::option::Option<unsafe extern "system" fn(callback: JsBackgroundWorkItemCallback, callbackstate: *const ::core::ffi::c_void) -> bool>;
pub type JsValueType = i32;
pub const JsUndefined: JsValueType = 0i32;
pub const JsNull: JsValueType = 1i32;
pub const JsNumber: JsValueType = 2i32;
pub const JsString: JsValueType = 3i32;
pub const JsBoolean: JsValueType = 4i32;
pub const JsObject: JsValueType = 5i32;
pub const JsFunction: JsValueType = 6i32;
pub const JsError: JsValueType = 7i32;
pub const JsArray: JsValueType = 8i32;
